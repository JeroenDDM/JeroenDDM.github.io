{"version":3,"file":"purecloud-client-app-sdk-894e0540.min.js","sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/strict-uri-encode/index.js","../node_modules/decode-uri-component/index.js","../node_modules/split-on-first/index.js","../node_modules/filter-obj/index.js","../node_modules/query-string/index.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/requires-port/index.js","../node_modules/querystringify/index.js","../node_modules/url-parse/index.js","../node_modules/genesys-cloud-service-discovery-web/index.js","../src/utils/env.ts","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../src/utils/comms.ts","../src/modules/base.ts","../src/modules/alerting.ts","../src/modules/lifecycle.ts","../src/modules/ui.ts","../src/modules/users.ts","../src/modules/directory.ts","../src/modules/conversations.ts","../src/modules/myConversations.ts","../src/modules/externalContacts.ts","../src/index.ts"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , port = /:\\d+$/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/;\n\n/**\n * Remove control characters and whitespace from the beginning of a string.\n *\n * @param {Object|String} str String to trim.\n * @returns {String} A new string representing `str` stripped of control\n *     characters and whitespace from its beginning.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(controlOrWhitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (port.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {\n    host += ':';\n  }\n\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar parseUrl = require('url-parse');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar parseUrl__default = /*#__PURE__*/_interopDefaultLegacy(parseUrl);\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nfunction assert(value, msg) {\r\n    if (!value)\r\n        throw new Error(msg);\r\n}\r\nfunction assertValidStringArray(value, valueName) {\r\n    if (valueName === void 0) { valueName = 'value'; }\r\n    assert(value instanceof Array, \"\".concat(valueName, \" must be an array of strings\"));\r\n    for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\r\n        var name_1 = value_1[_i];\r\n        assert(typeof name_1 === \"string\", \"Each item in \".concat(valueName, \" must be a string\"));\r\n    }\r\n}\r\nfunction parseValidUrl(value) {\r\n    assert(typeof value === \"string\", \"url is not a string\");\r\n    // Explicitly pass {} as 2nd param so that `url-parse` parses the url\r\n    // independently from the browser's current window location\r\n    var url = parseUrl__default['default'](value, {});\r\n    assert(url.protocol && url.hostname, \"invalid url: '\".concat(value, \"', unable to parse hostname\"));\r\n    return url;\r\n}\r\nfunction assertValidEnvFilters(value) {\r\n    assert(!!value && typeof value === \"object\", \"Provided filters must be an object\");\r\n    var filters = value;\r\n    if (filters.env !== undefined) {\r\n        assert(filters.env instanceof Array, 'filters.env must be an array');\r\n        assert(filters.env.every(function (env) { return ENVS.indexOf(env) >= 0; }), \"'\".concat(filters.env, \"' - filters.env must be an array containing only: \").concat(ENVS.join(',')));\r\n    }\r\n    if (filters.status !== undefined) {\r\n        assert(filters.status instanceof Array, 'filters.status must be an array');\r\n        assert(filters.status.every(function (status) { return STATUSES.indexOf(status) >= 0; }), \"'\".concat(filters.status, \"' - filters.status must be an array containing only: \").concat(STATUSES.join(',')));\r\n    }\r\n}\n\nvar _environments = [\n\t{\n\t\tname: \"fedramp-use2-core\",\n\t\tenv: \"fedramp\",\n\t\tregion: \"us-east-2\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"use2.us-gov-pure.cloud\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod\",\n\t\tenv: \"prod\",\n\t\tregion: \"us-east-1\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"mypurecloud.com\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-apne1\",\n\t\tenv: \"prod\",\n\t\tregion: \"ap-northeast-1\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"mypurecloud.jp\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-apne2\",\n\t\tenv: \"prod\",\n\t\tregion: \"ap-northeast-2\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"apne2.pure.cloud\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-apne3\",\n\t\tenv: \"prod\",\n\t\tregion: \"ap-northeast-3\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"apne3.pure.cloud\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-aps1\",\n\t\tenv: \"prod\",\n\t\tregion: \"ap-south-1\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"aps1.pure.cloud\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-apse2\",\n\t\tenv: \"prod\",\n\t\tregion: \"ap-southeast-2\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"mypurecloud.com.au\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-cac1\",\n\t\tenv: \"prod\",\n\t\tregion: \"ca-central-1\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"cac1.pure.cloud\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-euc1\",\n\t\tenv: \"prod\",\n\t\tregion: \"eu-central-1\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"mypurecloud.de\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-euc2\",\n\t\tenv: \"prod\",\n\t\tregion: \"eu-central-2\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"euc2.pure.cloud\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-euw1\",\n\t\tenv: \"prod\",\n\t\tregion: \"eu-west-1\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"mypurecloud.ie\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-euw2\",\n\t\tenv: \"prod\",\n\t\tregion: \"eu-west-2\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"euw2.pure.cloud\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-mec1\",\n\t\tenv: \"prod\",\n\t\tregion: \"me-central-1\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"mec1.pure.cloud\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-sae1\",\n\t\tenv: \"prod\",\n\t\tregion: \"sa-east-1\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"sae1.pure.cloud\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t},\n\t{\n\t\tname: \"prod-usw2\",\n\t\tenv: \"prod\",\n\t\tregion: \"us-west-2\",\n\t\tstatus: \"stable\",\n\t\tpublicDomainName: \"usw2.pure.cloud\",\n\t\tpublicDomainAliases: [\n\t\t]\n\t}\n];\n\nvar environments = _environments;\r\nvar ENVS = [\"dev\", \"test\", \"prod\", \"fedramp\"];\r\nvar STATUSES = [\"alpha\", \"beta\", \"stable\", \"archived\"];\r\nvar DEFAULT_LOCAL_HOSTNAMES = [\"localhost\", \"127.0.0.1\"];\r\nvar STABLE_PUBLIC_ENVS_FILTERS = { env: [\"prod\", \"fedramp\"], status: [\"stable\"] };\r\nvar NO_FILTERS = {};\r\nvar endsWith = function (s1, s2) {\r\n    return s1.slice(s1.length - s2.length) === s2;\r\n};\r\nvar matchesHostname = function (hostname) { return function (domain) {\r\n    return hostname === domain || endsWith(hostname, \".\".concat(domain));\r\n}; };\r\n/**\r\n * Retrieves the list of Genesys Cloud environment/region deployments.\r\n * Defaults to only returning stable, publically available deployments (e.g. prod, fedramp)\r\n */\r\nvar getEnvironments = function (filters) {\r\n    if (filters === void 0) { filters = STABLE_PUBLIC_ENVS_FILTERS; }\r\n    assertValidEnvFilters(filters);\r\n    var env = filters.env, status = filters.status;\r\n    return environments\r\n        .filter(function (data) { return env === undefined || env.indexOf(data.env) >= 0; })\r\n        .filter(function (data) { return status === undefined || status.indexOf(data.status) >= 0; });\r\n};\r\n/**\r\n * Whether or not the given url is a known Genesys Cloud deployment.  If no filters\r\n * are provided, the default behavior is to only check stable, publically available deployments\r\n * (e.g. prod, fedramp).\r\n *\r\n * - throws an error if passed an invalid url\r\n * - returns false for localhost\r\n */\r\nvar isKnown = function (url, filters) { return !!parse(url, filters); };\r\n/**\r\n * Retrieve the Genesys Cloud `Environment` for a given url.  If no filters\r\n * are provided, the default behavior is to only check stable, publically available deployments\r\n * (e.g. prod, fedramp).\r\n *\r\n * - throws an error if passed an invalid url\r\n * - returns undefined if no match is found\r\n */\r\nvar parse = function (url, filters) {\r\n    var hostname = parseValidUrl(url).hostname;\r\n    return getEnvironments(filters).find(function (_a) {\r\n        var publicDomainName = _a.publicDomainName, publicDomainAliases = _a.publicDomainAliases;\r\n        var domains = __spreadArray([publicDomainName], publicDomainAliases, true).filter(function (d) { return !!d; });\r\n        return domains.some(matchesHostname(hostname));\r\n    });\r\n};\r\n/**\r\n * Retrieve the current Genesys Cloud runtime environment for the given url.\r\n * This method attempts to parse the hostname directly (uses `parse` under the hood).\r\n *\r\n * By default, this method will attempt to search across all available environments (no filtering).\r\n */\r\nvar parseDeployedRuntime = function (url, filters) {\r\n    if (url === void 0) { url = window.location.href; }\r\n    if (filters === void 0) { filters = NO_FILTERS; }\r\n    assertValidEnvFilters(filters);\r\n    var hostname = parseValidUrl(url).hostname;\r\n    var parsedEnv = parse(url, filters);\r\n    if (!parsedEnv)\r\n        return;\r\n    return __assign(__assign({}, parsedEnv), { local: false, currentDomainName: __spreadArray([\r\n            parsedEnv.publicDomainName\r\n        ], parsedEnv.publicDomainAliases, true).filter(function (d) { return !!d; }).find(matchesHostname(hostname)) });\r\n};\r\n/**\r\n * When the hostname matches a valid local hostname, either by matching our defaults or your custom list\r\n * passed in the options, this method will attempt to match the first path param by name to an environment.\r\n * The list of environment names can be retrieved by calling `getEnvironments` and can be found under the\r\n * `name` key.\r\n *\r\n * By default, this method will attempt to search across all available environments (no filtering).\r\n *\r\n * Note: `currentDomainName` will be equal to `publicDomainName` when using this method.\r\n * Example: https://localhost:3000/prod => us-east-1 prod environment & runtime details\r\n */\r\nvar parseRuntimeFromLocalPath = function (localHostnames) {\r\n    if (localHostnames === void 0) { localHostnames = DEFAULT_LOCAL_HOSTNAMES; }\r\n    return function (url, filters) {\r\n        if (url === void 0) { url = window.location.href; }\r\n        if (filters === void 0) { filters = NO_FILTERS; }\r\n        assertValidEnvFilters(filters);\r\n        assertValidStringArray(localHostnames, 'localHostnames');\r\n        var _a = parseValidUrl(url), hostname = _a.hostname, pathname = _a.pathname;\r\n        if (localHostnames.indexOf(hostname) >= 0) {\r\n            var _b = pathname.split(\"/\"), envName_1 = _b[1];\r\n            var localEnv = getEnvironments(filters).find(function (e) { return e.name === envName_1; });\r\n            if (!localEnv)\r\n                return;\r\n            return __assign(__assign({}, localEnv), { local: true, currentDomainName: localEnv.publicDomainName });\r\n        }\r\n    };\r\n};\r\n/**\r\n * This is the default and recommended `RuntimeParser` implementation that is composed of the\r\n * `parseDeployedRuntime` and `parseRuntimeFromLocalPath` parsers. You might opt to compose the\r\n * `parseDeployedRuntime` with your own `RuntimeParser` as an alternative to parseRuntimeFromLocalPath.\r\n * You may also opt to use \"parse\" and `getEnvironments` together to create your own parsing strategy.\r\n */\r\nvar parseRuntime = function (url, filters) {\r\n    if (url === void 0) { url = window.location.href; }\r\n    if (filters === void 0) { filters = NO_FILTERS; }\r\n    return parseRuntimeFromLocalPath()(url, filters) || parseDeployedRuntime(url, filters);\r\n};\n\nexports.ENVS = ENVS;\nexports.STATUSES = STATUSES;\nexports.getEnvironments = getEnvironments;\nexports.isKnown = isKnown;\nexports.parse = parse;\nexports.parseDeployedRuntime = parseDeployedRuntime;\nexports.parseRuntime = parseRuntime;\nexports.parseRuntimeFromLocalPath = parseRuntimeFromLocalPath;\n","/* eslint-disable no-console */\nimport { getEnvironments, Environment } from 'genesys-cloud-service-discovery-web';\n\nexport interface PcEnv {\n    pcEnvTld: string;\n    pcAppOrigin: string;\n}\n\nconst buildPcEnv = (tld: string): PcEnv => ({\n    pcEnvTld: tld,\n    pcAppOrigin: `https://apps.${tld}`\n});\n\nconst DEFAULT_ENV_REGION = 'us-east-1';\nconst environments = getEnvironments({ env: ['prod', 'fedramp'], status: ['beta', 'stable'] });\n\nconst PC_ENV_TLDS = environments\n    .reduce((tlds, env) => {\n        tlds.push(env.publicDomainName);\n        tlds.push(...env.publicDomainAliases);\n        return tlds;\n    }, [] as string[])\n    .concat(__PC_DEV_ENVS__);\n\nconst [defaultEnv] = environments.filter(env => env.region === DEFAULT_ENV_REGION);\n\nexport const DEFAULT_PC_ENV = buildPcEnv(defaultEnv.publicDomainName);\n\nfunction isKnownEnvName(toCheck: string, envs: Environment[]) {\n    const envList = new Set<string>([...envs, ...__GC_DEV_EXTRA_ENVS__].map((e) => e.name));\n    return envList.has(toCheck);\n}\n\nconst matchesHostname = (hostname: string) => (domain: string) => {\n    return hostname === domain || hostname.endsWith(`.${domain}`);\n};\n\nfunction findPcEnvironment(location: URL, targetEnv: string, envs: Environment[]): PcEnv|null {\n    const parsedEnv = [...envs, ...__GC_DEV_EXTRA_ENVS__].find(({ publicDomainName, publicDomainAliases }) => {\n        const domains = [publicDomainName, ...publicDomainAliases].filter(d => !!d);\n        return domains.some(matchesHostname(location.hostname));\n    });\n    if (parsedEnv && parsedEnv.name === targetEnv) {\n        return {\n            pcEnvTld: parsedEnv.publicDomainName,\n            pcAppOrigin: location.origin\n        };\n    }\n    return null;\n}\n\n/**\n * Attempts to locate a PC environment corresponding to the provided search params\n *\n * @param pcEnvTld A string representing the Genesys Cloud environment top-level domain to search for\n * @param lenient When true, trims leading/trailing whitespace, ignores leading '.', and ignores trailing '/'.\n * @param envTlds A string array of all available Genesys Cloud environment top-level domains\n * @param hostAppDevOrigin The origin to target when the host app is running on `localhost`\n *\n * @returns A Genesys Cloud environment object if found; null otherwise.\n */\nexport const lookupPcEnv = (pcEnvTld: string, lenient = false, envTlds: string[] = PC_ENV_TLDS, hostAppDevOrigin = __HOST_APP_DEV_ORIGIN__): PcEnv | null => {\n    if (pcEnvTld && typeof pcEnvTld === 'string') {\n        if (pcEnvTld === 'localhost' && hostAppDevOrigin) {\n            return {\n                pcEnvTld: 'localhost',\n                pcAppOrigin: hostAppDevOrigin\n            };\n        }\n        let toSearch = pcEnvTld;\n\n        if (lenient) {\n            toSearch = toSearch.trim();\n\n            if (toSearch.indexOf('.') === 0) {\n                toSearch = toSearch.substring(1);\n            }\n\n            if (toSearch.indexOf('/') === (toSearch.length - 1)) {\n                toSearch = toSearch.substring(0, toSearch.length - 1);\n            }\n        }\n\n        if (envTlds.indexOf(toSearch) >= 0) {\n            return buildPcEnv(toSearch);\n        }\n    }\n\n    return null;\n};\n\n/**\n * Attempts to locate a GC environment corresponding to the provided origin/targetEnv combination\n * @param url A string representing the Genesys Cloud environment url\n * @param targetEnv A string representing the Genesys Cloud environment target\n * @param envs A Environment array of all available Genesys Cloud environments\n * @returns A Genesys Cloud environment object if found; null otherwise.\n */\nexport const lookupGcEnv = (url: string, targetEnv: string, envs: Environment[] = environments): PcEnv|null => {\n    if (!isKnownEnvName(targetEnv, envs)) {\n        return null;\n    }\n    try {\n        const hostLocation = new URL(url);\n        if (['localhost', '127.0.0.1'].includes(hostLocation.hostname)) {\n            return {\n                pcEnvTld: 'localhost',\n                pcAppOrigin: hostLocation.origin\n            };\n        } else {\n            return findPcEnvironment(hostLocation, targetEnv, envs);\n        }\n    } catch {\n        return null;\n    }\n};\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","export default {\n    /**\n     * Posts the provided msg to the specified origin and parent window when invoked within the\n     * expected environment (e.g. a frame hosted within Genesys Cloud).\n     *\n     * @param msg - The payload to send as a postMessage\n     * @param tgtOrigin - The destination origin (see postMessage)\n     * @param transfer - Transferable objects (see postMessage)\n     * @param myWindow - The current execution window. Default window\n     * @param myParent - The parent window to which the message should be posted. Default parent\n     * @param myConsole - logs errors here rather than throwing errors. Default console\n     *\n     * @throws Error if the environment is invalid (e.g. not a browser, no postMessage api,\n     *  not running within an iframe) and myConsole is not specified\n     */\n    postMsgToPc(msg: any, tgtOrigin: string, transfer?: Transferable[], myWindow: Window = window, myParent = window.parent, myConsole: Console | null = window.console) {\n        const validRuntime = !!(myWindow && typeof myWindow === 'object' && myParent && typeof myParent === 'object');\n        const validEnv = (validRuntime && myParent !== myWindow);\n        const validApi = !!(myParent && typeof myParent.postMessage === 'function');\n\n        if (validRuntime && validEnv && validApi) {\n            myParent.postMessage(msg, tgtOrigin, transfer);\n        } else {\n            let errMsg = 'PureCloud Communication Failed.  ';\n            if (!validRuntime) {\n                errMsg += 'Not running within a browser.';\n            } else if (!validEnv) {\n                errMsg += 'Not running within an iframe.';\n            } else {\n                errMsg += 'postMessage not supported in this browser.';\n            }\n\n            if (myConsole) {\n                myConsole.error(errMsg);\n            } else {\n                throw new Error(errMsg);\n            }\n        }\n    }\n};\n","/**\n * Base module for all API modules\n *\n * @since 1.0.0\n */\nimport commsUtils from '../utils/comms';\n\nconst PROTOCOL_NAME = 'purecloud-client-apps';\n\ninterface ProtocolDetails {\n    name: string;\n    agentName: string;\n    agentVersion: string;\n}\n\nexport interface SDKMessagePayload {\n    action: string;\n    hook?: string;\n    protocol: string;\n    protocolAgentName: string;\n    protocolAgentVersion: string;\n}\n\nexport type MessageListener = (event: SDKMessagePayload) => void;\nexport type MessagePayloadFilter = (payload: SDKMessagePayload) => boolean;\n\ntype ListenerOptions = Partial<{\n    /** \n     * Set to true to only invoke this listener once; it will be removed after first invocation.\n     * false by default.  null/undefined will use default.\n     */\n    once: boolean;\n    /**\n     * Provide a function to further filter the invocation of the listener;\n     * The listener will be called if this method returns a truthy value. null by default.  undefined will also use default.\n     */\n    msgPayloadFilter: MessagePayloadFilter | null;\n}>\n\ninterface ListenerConfig {\n    listener: MessageListener;\n    options: ListenerOptions;\n}\n\n/**\n * Base Class for Genesys Cloud Client App APIs\n *\n * @since 1.0.0\n */\nclass BaseApi {\n    private _targetPcOrigin: string;\n    private _protocolDetails: ProtocolDetails;\n\n    // ----- Message Listening\n    private _msgListenerCfgs: Record<string, ListenerConfig[]> = {};\n    private _msgHandler = (event: MessageEvent) => this._onMsg(event);\n\n    /**\n     * Injection point for tests.  Should not be used by api users or extenders.\n     */\n    private _commsUtils = commsUtils;\n\n    /**\n     * Injection point for tests.  Should not be used by api users or extenders.\n     */\n    private _myWindow = window as Window;\n\n    /**\n     * Injection point for tests.  Should not be used by api users or extenders.\n     */\n    private _myParent = (window ? window.parent : undefined);\n\n    /**\n     * Instantiates the BaseApi\n     *\n     * @param cfg Optional configuration\n     *\n     * @since 1.0.0\n     */\n    constructor(cfg: {\n        /** The origin (protocol, hostname, and port) of the target PC environment (e.g. https://apps.mypurecloud.com). Default is '*'. */\n        targetPcOrigin?: string | null,\n        /** The name of the message protocol under which the message will be sent. Default is purecloud-client-apps. */\n        protocol?: string | null;\n        /** The name of the agent from which the message will be sent. Default is purecloud-client-app-sdk (name of the package). */\n        protocolAgentName?: string | null;\n        /** The version of the agent from which the message will be sent. Default is the version of the package. */\n        protocolAgentVersion?: string | null;\n    } = {}) {\n        this._targetPcOrigin = cfg.targetPcOrigin || '*';\n\n        this._protocolDetails = {\n            name: cfg.protocol || PROTOCOL_NAME,\n            agentName: cfg.protocolAgentName || __PACKAGE_NAME__,\n            agentVersion: cfg.protocolAgentVersion || __PACKAGE_VERSION__\n        };\n    }\n\n    /**\n     * Sends the message to Genesys Cloud augmenting with environmental details such as\n     * target env origin and version info.  Accessible by extenders.\n     *\n     * @param actionName\n     * @param msgPayload\n     *\n     * @since 1.0.0\n     */\n    protected sendMsgToPc(actionName: string, msgPayload?: object) {\n        this._commsUtils.postMsgToPc(this.buildSdkMsgPayload(actionName, msgPayload), this._targetPcOrigin);\n    }\n\n    /**\n     * Constructs a payload tailored for the Genesys Cloud Client Apps SDK.  Can be\n     * overridden by extenders, but should not be invoked externally.\n     *\n     * @param actionName - The name of the client-app action to invoke\n     * @param msgPayload - Action-specific payload data\n     *\n     * @returns A postMessage payload for the Client Apps SDK\n     *\n     * @since 1.0.0\n     */\n    protected buildSdkMsgPayload(actionName: string, msgPayload?: object) {\n        let result = {} as SDKMessagePayload;\n\n        // Clone the payload\n        if (msgPayload && typeof msgPayload === 'object') {\n            result = JSON.parse(JSON.stringify(msgPayload));\n        }\n\n        result.action = actionName;\n        result.protocol = this._protocolDetails.name;\n        result.protocolAgentName = this._protocolDetails.agentName;\n        result.protocolAgentVersion = this._protocolDetails.agentVersion;\n\n        return result;\n    }\n\n    // ----- Message Listening\n\n    /**\n     * Adds the specified listener to messages sent from the host Genesys Cloud appliation\n     * on the specified eventType\n     *\n     * @param eventType - The name of the purecloudEventType in the message; case and leading/trailing space sensitive\n     * @param listener - The listener function to invoke when a message of the specified eventType\n     *   is received.  Message data will be passed\n     * @param options - Options for the invocation of the listener; null/undefined will use defaults\n     *\n     * @since 1.0.0\n     */\n    protected addMsgListener(eventType: string, listener: MessageListener, options: ListenerOptions | null = {}) {\n        if (!eventType || typeof eventType !== 'string' || eventType.trim().length === 0) {\n            throw new Error('Invalid eventType provided to addMsgListener');\n        }\n\n        if (!listener || typeof listener !== 'function') {\n            throw new Error('Invalid listener provided to addMsgListener');\n        }\n\n        const proposedListenerCfg = {\n            listener,\n            options: this._buildNormalizedListenerOptions(options)\n        };\n\n        let duplicateListener = false;\n        let listenerCfgs = this._msgListenerCfgs[eventType];\n        if (!listenerCfgs) {\n            listenerCfgs = [];\n            this._msgListenerCfgs[eventType] = listenerCfgs;\n        } else if (listenerCfgs.length > 0) {\n            // Check for duplicates\n            listenerCfgs.forEach(currListenerCfg => {\n                if (this._isDuplicateListenerCfg(currListenerCfg, proposedListenerCfg)) {\n                    duplicateListener = true;\n                }\n            });\n        }\n\n        if (!duplicateListener) {\n            listenerCfgs.push(proposedListenerCfg);\n\n            if (this._getListenerCount() === 1) {\n                // This is the addition of the only active listener, start listening\n                this._subscribeToMsgs();\n            }\n        }\n    }\n\n    /**\n     * Removes the specified listener from messages sent from the host Genesys Cloud appliation\n     * on the specified eventType. eventType, listener (strict equality), and options must match.\n     *\n     * @param eventType - The name of the purecloudEventType previously registered; case and leading/trailing space sensitive\n     * @param listener - The exact listener function instance that was previously registered.\n     * @param options - Options registered with the listener;\n     *  null and undefined trigger defaults and will be considered equal.\n     *\n     * @throws Error if the eventType, listener, or options are invalid\n     *\n     * @since 1.0.0\n     */\n    protected removeMsgListener(eventType: string, listener: MessageListener, options: ListenerOptions | null = {}) {\n        if (!eventType || typeof eventType !== 'string' || eventType.trim().length === 0) {\n            throw new Error('Invalid eventType provided to removeMsgListener');\n        }\n\n        if (!listener || typeof listener !== 'function') {\n            throw new Error('Invalid listener provided to removeMsgListener');\n        }\n\n        // Note: Building the normalized options also validates the options param.\n        // This should stay here to always validate the params regardless of eventType listener presence\n        const listenerCfgToRemove = {\n            listener,\n            options: this._buildNormalizedListenerOptions(options)\n        };\n\n        const eventTypeListenerCfgs = this._msgListenerCfgs[eventType];\n        if (eventTypeListenerCfgs) {\n            let listenerCfgIndex = -1;\n            for (let index = 0; index < eventTypeListenerCfgs.length; index++) {\n                if (this._isDuplicateListenerCfg(eventTypeListenerCfgs[index], listenerCfgToRemove)) {\n                    listenerCfgIndex = index;\n                    break;\n                }\n            }\n\n            if (listenerCfgIndex >= 0) {\n                eventTypeListenerCfgs.splice(listenerCfgIndex, 1);\n\n                if (this._getListenerCount() === 0) {\n                    // No more listeners, tear down our listener\n                    this._unsubscribeFromMsgs();\n                }\n            }\n        }\n    }\n\n    /**\n     * Returns the total number of registered listeners.\n     */\n    private _getListenerCount() {\n        let result = 0;\n\n        Object.keys(this._msgListenerCfgs).forEach(currEventType => {\n            const currListenerCfgs = this._msgListenerCfgs[currEventType];\n\n            if (currListenerCfgs) {\n                result += currListenerCfgs.length;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Initiate listening for messages from the host Genesys Cloud application\n     */\n    private _subscribeToMsgs() {\n        this._myWindow.addEventListener('message', this._msgHandler);\n    }\n\n    /**\n     * Stop listening for messages from the host Genesys Cloud application\n     */\n    private _unsubscribeFromMsgs() {\n        this._myWindow.removeEventListener('message', this._msgHandler);\n    }\n\n    /**\n     * Message handler function that will filter message events and invoke the correct, registered\n     * listeners.\n     */\n    private _onMsg(event: MessageEvent) {\n        if (!event || !event.source || !event.origin || event.source !== this._myParent ||\n            event.origin !== this._targetPcOrigin || !event.data || typeof event.data !== 'object' ||\n            Array.isArray(event.data)) {\n            // Fast-fail for invalid or unknown event\n            return;\n        }\n\n        // Validate base payload\n        const eventType = event.data.purecloudEventType;\n        if (eventType && typeof eventType === 'string' && eventType.trim()) {\n            const eventTypeListenerCfgs = this._msgListenerCfgs[eventType];\n            if (eventTypeListenerCfgs && eventTypeListenerCfgs.length > 0) {\n                const listenerCfgsToRemove: ListenerConfig[] = [];\n\n                eventTypeListenerCfgs.forEach(currListenerCfg => {\n                    if (!currListenerCfg.options.msgPayloadFilter || currListenerCfg.options.msgPayloadFilter(event.data)) {\n                        // Clone the event data and prune internal props before sending the event to user-space\n                        const userSpaceEventData: SDKMessagePayload = JSON.parse(JSON.stringify(event.data));\n                        delete userSpaceEventData.protocol;\n\n                        currListenerCfg.listener(userSpaceEventData);\n\n                        if (currListenerCfg.options.once) {\n                            listenerCfgsToRemove.push(currListenerCfg);\n                        }\n                    }\n                });\n\n                if (listenerCfgsToRemove.length > 0) {\n                    listenerCfgsToRemove.forEach(currListenerCfg => {\n                        this.removeMsgListener(eventType, currListenerCfg.listener, currListenerCfg.options);\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Validates and normalizes listener options. msgPayloadFilter will be normalized to null and once\n     * will be normalized to false if not specified or specified as an \"empty\" object (null/undefined).\n     *\n     * @param options The additional options config provided to [add|remove]MsgListener; null and undefined also allowed.\n     *\n     * @returns A normalized listener options object containing the msgPayloadFilter and once properties.\n     * msgPayloadFilter will be null unless a valid function is explicitly provided.  once will be false unless true\n     * is explictly provided.\n     *\n     * @throws Error if options is not null, undefined, or an object\n     * @throws Error if options.msgPayloadFilter is not null, undefined, or a function\n     * @throws Error if options.once is not null, undefined, or a boolean\n     */\n    private _buildNormalizedListenerOptions(options?: Record<string, any> | null): ListenerOptions {\n        const result: ListenerOptions = {\n            msgPayloadFilter: null,\n            once: false\n        };\n\n        if (options === null || options === undefined) {\n            return result;\n        }\n\n        if (typeof options !== 'object' || Array.isArray(options)) {\n            throw new Error('Invalid options provided');\n        }\n\n        const filter = options.msgPayloadFilter;\n        if (filter !== null && filter !== undefined && typeof filter !== 'function') {\n            throw new Error('options.msgPayloadFilter must be a function if specified');\n        }\n        result.msgPayloadFilter = filter || null;\n\n        if (options.once !== null && options.once !== undefined && typeof options.once !== 'boolean') {\n            throw new Error('options.once must be a boolean if specified');\n        }\n        result.once = options.once || false;\n\n        return result;\n    }\n\n    /**\n     * Determines if the specified listener configs are duplicates with respect to\n     * listener registration.  Assumes the configs will be normalized for easier comparison.\n     *\n     * @param listenerCfg1 The first config\n     * @param listenerCfg2 The second config\n     *\n     * @returns true if the listener, msgPayloadFilter, and once are equal; false otherwise\n     */\n    private _isDuplicateListenerCfg(listenerCfg1: ListenerConfig, listenerCfg2: ListenerConfig) {\n        return (listenerCfg1.listener === listenerCfg2.listener &&\n            listenerCfg1.options.once === listenerCfg2.options.once &&\n            listenerCfg1.options.msgPayloadFilter === listenerCfg2.options.msgPayloadFilter);\n    }\n}\n\nexport default BaseApi;\n","/**\n * Utilities for alerting and attention\n *\n * @since 1.0.0\n */\n\nimport BaseApi from './base';\n\nconst VALID_MESSAGE_TYPES = ['error', 'info', 'success'] as const;\nconst VALID_SUPPLEMENTAL_OPTIONS = ['id', 'markdownMessage', 'timeout', 'showCloseButton'] as const;\n\ntype ValidMessageType = typeof VALID_MESSAGE_TYPES[number];\n\nconst isValidMessageType = (type: string): type is ValidMessageType => {\n    return VALID_MESSAGE_TYPES.indexOf(type as ValidMessageType) > -1;\n};\n\nconst pick = <\n    T extends Record<string, unknown>,\n    K extends keyof T,\n>(obj: T, keys: readonly K[]): Pick<T, K> => {\n    const newObj = {} as Record<K, any>;\n    keys.forEach(key => {\n        newObj[key] = obj[key];\n    });\n    return newObj;\n};\n\ntype ToastOptions<Type extends ValidMessageType, Timeout extends number> = {\n    /**\n     * The id of the message.  Duplicate IDs will replace each other in the toast display.  All IDs will be\n     * namespaced with your app ID to avoid collisions.  (Default will just be your app's namespace and will not support multiple messages)\n     * */\n    id?: string;\n    /** Toast type, valid options are 'error', 'info', 'success'.  (Default is 'info') */\n    type?: Type;\n    /** Boolean indicating if the message is in MD.  (Default is true) */\n    markdownMessage?: boolean;\n} & ToastTimeoutConfig<Type, Timeout> & ToastCloseButtonConfig<Timeout>;\n\ntype ToastTimeoutConfig<Type extends ValidMessageType, Timeout extends number> = Type extends 'error'\n    ? {\n        /**\n         * Time in seconds to show the toast.  Set to 0 to disable automatic dismissal. (Default is 7)\n         * Timeout must be 0 for toasts with type 'error'.\n         */\n        timeout: 0;\n    } : {\n        /** Time in seconds to show the toast.  Set to 0 to disable automatic dismissal. (Default is 7) */\n        timeout?: Timeout;\n    }\n\ntype ToastCloseButtonConfig<Timeout extends number> = Timeout extends 0\n    ? {\n        /**\n         * Boolean indicating if the close button should be shown.\n         * Must explicitly set to true when `timeout` is 0; otherwise, default is true\n         */\n        showCloseButton: true\n    } : {\n        /**\n         * Boolean indicating if the close button should be shown.\n         * Must explicitly set to true when `type` is 'error'; otherwise, default is true\n         */\n        showCloseButton?: boolean\n    }\n\nconst defaultToastOptions: ToastOptions<ValidMessageType, number> = {\n    type: 'info',\n    timeout: 7,\n    showCloseButton: true,\n    markdownMessage: true\n};\n\n/**\n * Handles aspects of alerting and attention of this app with Genesys Cloud\n *\n * @noInheritDoc\n * @since 1.0.0\n */\nclass AlertingApi extends BaseApi {\n    /**\n     * Displays a toast popup.\n     *\n     * Permanent/Sticky toasts are not allowed.  Therefore, toasts must specify either a manual\n     * dismissal (`showCloseButton: true`) or an automatic dismissal (`timeout > 0`). Both\n     * `showCloseButton` and `timeout` can be specified to provide both dismissal options.\n     *\n     * Error toasts (`type: 'error'`) require manual dismissal and must be explictly specified with `showCloseButton: true`.\n     * TypeScript users will also specify `timeout: 0` while JavaScript users can specify 0 or omit the prop entirely.\n     * The `timeout` prop will be ignored regardless.\n     * \n     * **Toast Options:**\n     * \n     * Name | Type | Default | Description |\n     * `id` | string | your app's namespace | The id of the message.  Duplicate IDs will replace each other in the toast display.  All IDs will be namespaced with your app ID to avoid collisions. Default will just be your app's namespace and will not support multiple messages. |\n     * `type` | 'error' &#124; 'info' &#124; 'success' | 'info' | The type of the toast message. |\n     * `markdownMessage` |  boolean | true | Indicates if the message is in MD. |\n     * `timeout` | number | 7 | Time in seconds to show the toast.  Set to `0` to disable automatic dismissal. `timeout` must be `0` for toasts with `type: 'error'`. |\n     * `showCloseButton` | boolean | true | Indicates if the close button should be shown. Must be explicitly set to true when `timeout` is `0`. |\n     * \n     * The type parameters impact the options config. The `MessageType` type extends `'error' | 'info' | 'success'`, and when it is set to `'error'`, it enforces that `timeout` is `0`. The `Timeout` type extends `number`, and when set to `0` it enforces that `showCloseButton` is `true` to prevent a permanent toast message.\n     *\n     * ```ts\n     * myClientApp.alerting.showToastPopup(\"Hello world\", \"Hello world, how are you doing today?\");\n     * ```\n     *\n     * ```ts\n     * var options = {\n     *    type: 'success'\n     * };\n     * myClientApp.alerting.showToastPopup(\"Hello world\", \"Hello world, how are you doing today?\", options);\n     * ```\n     *\n     * ```ts\n     * var options = {\n     *    id: 'greeting',\n     *    timeout: 0,\n     *    showCloseButton: true\n     * };\n     * myClientApp.alerting.showToastPopup(\"Hello world\", \"Hello world, how are you doing today?\", options);\n     * // Set new id so the messages can show together\n     * options.id = 'exit'\n     * myClientApp.alerting.showToastPopup(\"Goodbye world\", \"See you later world\", options);\n     * ```\n     *\n     * ```ts\n     * var options = {\n     *    id: 'mdExample',\n     *    markdownMessage: true\n     * };\n     * myClientApp.alerting.showToastPopup(\"Hello world\", \"Hello :earth_americas: How are *you* doing today?\", options);\n     * ```\n     * \n     * @param title - Toast title.\n     * @param message - Toast Message.  Supports emoticons, emoji (unicode, shortcodes) and markdown (with markdownMessage boolean).\n     * @param options - Additonal toast options. \n     *\n     * @since 1.0.0\n     */\n    showToastPopup<\n        MessageType extends ValidMessageType,\n        Timeout extends number\n    >(\n        title: string,\n        message: string,\n        options?: ToastOptions<MessageType, Timeout>\n    ) {\n        const toastOptions = options || defaultToastOptions;\n        const messageParams = {\n            title,\n            message,\n            type: 'info'\n        };\n\n        if (toastOptions && typeof toastOptions === 'object') {\n            if (toastOptions.type && typeof toastOptions.type === 'string') {\n                const requestedType = toastOptions.type.trim().toLowerCase();\n\n                if (isValidMessageType(requestedType)) {\n                    messageParams.type = requestedType;\n                }\n            }\n\n            const validOptions = pick(toastOptions, VALID_SUPPLEMENTAL_OPTIONS);\n            Object.assign(messageParams, validOptions);\n        }\n\n        super.sendMsgToPc('showToast', messageParams);\n    }\n    \n    /**\n     * Displays badging for unread messages and notifications\n     *\n     * ```ts\n     * myClientApp.alerting.setAttentionCount(2);\n     * ```\n     *\n     * ```ts\n     * myClientApp.alerting.setAttentionCount(0);\n     * ```\n     *\n     * @param count - The updated number of unread messages or notifications\n     *\n     * @since 1.0.0\n     */\n    setAttentionCount(count: number) {\n        super.sendMsgToPc('setAttentionCount', {count});\n    }\n}\n\nexport default AlertingApi;\n","/**\n * Utilities for monitoring and updating the lifecycle of a Genesys Cloud Client App\n *\n * @since 1.0.0\n */\n\nimport BaseApi, { SDKMessagePayload, MessagePayloadFilter } from './base';\n\nexport type LifecycleHook = 'bootstrap' | 'focus' | 'blur' | 'stop';\n\nconst LIFECYCLE_HOOK_EVENT_NAME = 'appLifecycleHook';\nconst buildHookFilter = (hookName: LifecycleHook): MessagePayloadFilter => (msgPayload) => {\n    return (typeof msgPayload === 'object' && msgPayload.hook === hookName);\n};\nconst BOOTSTRAP_HOOK_FILTER = buildHookFilter('bootstrap');\nconst FOCUS_HOOK_FILTER = buildHookFilter('focus');\nconst BLUR_HOOK_FILTER = buildHookFilter('blur');\nconst STOP_HOOK_FILTER = buildHookFilter('stop');\n\n/**\n * Utilities for monitoring and updating the lifecycle of a Genesys Cloud Client App\n *\n * ### Lifecycle Hooks\n *\n * These utilities require the app to be opted into the appropriate lifecycle hook via\n * advanced configuration.  This can be set via the API, Admin UI, or hard-coded for Premium Apps.\n * The format of lifecycle hooks in advanced configuration is as follows:\n *\n * ```json\n * {\n *   \"lifecycle\": {\n *     \"ephemeral\": <boolean>,\n *     \"hooks\": {\n *       \"stop\": <boolean>,\n *       \"blur\": <boolean>,\n *       \"focus\": <boolean>,\n *       \"bootstrap\": <boolean>\n *     }\n *   }\n * }\n * ```\n *\n * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events) for more details\n * @noInheritDoc\n * @since 1.0.0\n */\nclass LifecycleApi extends BaseApi {\n    /**\n     * Attach a listener function to be called when Genesys Cloud has loaded the app.\n     *\n     * This provides a hook for implementers to do any post-load initialization\n     * work with Genesys Cloud.  Implementers should call bootstrapped() after initialization work is\n     * complete.  Genesys Cloud will eventually timeout and show the app anyway if the bootstrapped()\n     * function is not called in a timely manor.\n     *\n     * #### Required Lifecycle Hooks ([More Info](/api/client-apps/advanced.html#lifecycle_events))\n     * * `bootstrap`\n     *\n     * ```ts\n     * myClientApp.lifecycle.addBootstrapListener(() => {\n     *   // Perform bootstrap (post-load init) work\n     *\n     *   // Simulate 500ms delay\n     *   window.setTimeout(() => {\n     *     myClientApp.lifecycle.bootstrapped();\n     *   }, 500);\n     * });\n     * ```\n     * \n     * @param listener - The function to call when Genesys Cloud is ready for the app to\n     * perform post-load initialization work.  This function will be passed the lifecycle event and\n     * does not augment the this context.\n     * @param once - If the listener should only be invoked once or repeatedly; true by default.\n     *\n     * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events)\n     *\n     * @since 1.0.0\n     */\n    addBootstrapListener(listener: (event: SDKMessagePayload) => void, once = true) {\n        this.addMsgListener(LIFECYCLE_HOOK_EVENT_NAME, listener, {\n            once,\n            msgPayloadFilter: BOOTSTRAP_HOOK_FILTER\n        });\n    }\n\n    /**\n     * Signals Genesys Cloud that this app has finished its initialization work and\n     * can be shown to the user.\n     *\n     * #### Required Lifecycle Hooks ([More Info](/api/client-apps/advanced.html#lifecycle_events))\n     * * `bootstrap`\n     *\n     * ```ts\n     * myClientApp.lifecycle.bootstrapped();\n     * ```\n     *\n     * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events)\n     *\n     * @since 1.0.0\n     */\n    bootstrapped() {\n        super.sendMsgToPc('bootstrapped');\n    }\n\n    /**\n     * Remove a previously registered bootstrap lifecycle event listener.\n     *\n     * #### Required Lifecycle Hooks ([More Info](/api/client-apps/advanced.html#lifecycle_events))\n     * * `bootstrap`\n     * \n     * ```ts\n     * let onBootstrap = evt => {\n     *   // Perform bootstrap (post-load init) work\n     *\n     *   // Remove the listener. [Note:] once must be provided to match\n     *   myClientApp.lifecycle.removeBootstrapListener(onBootstrap, false);\n     * };\n     * // Note once must be set to false or the listener will be auto-removed by default\n     * myClientApp.lifecycle.addBootstrapListener(onBootstrap, false);\n     * ```\n     *\n     * @param listener - The previously registered bootstrap event listener.\n     * @param once - false if once was explicitly set as false when adding the listener;\n     *  otherwise, you can explicitly provide true or rely on the default.\n     *\n     * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events)\n     *\n     * @since 1.0.0\n     */\n    removeBootstrapListener(listener: (event: SDKMessagePayload) => void, once = true) {\n        this.removeMsgListener(LIFECYCLE_HOOK_EVENT_NAME, listener, {\n            once,\n            msgPayloadFilter: BOOTSTRAP_HOOK_FILTER\n        });\n    }\n\n    /**\n     * Attach a listener function to be called when the user has re-focused your app.\n     * [Note:] Focus is not called on initial show.  Use the bootstrap listener for that work.\n     *\n     * #### Required Lifecycle Hooks ([More Info](/api/client-apps/advanced.html#lifecycle_events))\n     * * `focus`\n     * \n     * ```ts\n     * let onFocus = evt => {\n     *   // Perform focus work\n     * };\n     * myClientApp.lifecycle.addFocusListener(onFocus);\n     *\n     * // Don't forget to remove this listener inside the stop event listener\n     * myClientApp.lifecycle.addStopListener(() => {\n     *   myClientApp.lifecycle.removeFocusListener(onFocus);\n     * });\n     * ```\n     *\n     * @param listener - The function to call when the user has re-focused your app in the UI.\n     * @param once - If the listener should only be invoked once or repeatedly; false by default.\n     *\n     * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events)\n     *\n     * @since 1.0.0\n     */\n    addFocusListener(listener: (event: SDKMessagePayload) => void, once = false) {\n        this.addMsgListener(LIFECYCLE_HOOK_EVENT_NAME, listener, {\n            once,\n            msgPayloadFilter: FOCUS_HOOK_FILTER\n        });\n    }\n\n    /**\n     * Remove a previously registered focus lifecycle event listener\n     *\n     * #### Required Lifecycle Hooks ([More Info](/api/client-apps/advanced.html#lifecycle_events))\n     * * `focus`\n     * \n     * ```ts\n     * let onFocus = evt => {\n     *   // Perform focus work\n     * };\n     * myClientApp.lifecycle.addFocusListener(onFocus);\n     *\n     * // Don't forget to remove this listener inside the stop event listener\n     * myClientApp.lifecycle.addStopListener(() => {\n     *   myClientApp.lifecycle.removeFocusListener(onFocus);\n     * });\n     * ```\n     *\n     * @param listener - The previously registered focus event listener.\n     * @param once - true if once was explicitly set as true when adding the listener;\n     *  otherwise, you can explicitly provide false or rely on the default.\n     *\n     * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events)\n     *\n     * @since 1.0.0\n     */\n    removeFocusListener(listener: (event: SDKMessagePayload) => void, once = false) {\n        this.removeMsgListener(LIFECYCLE_HOOK_EVENT_NAME, listener, {\n            once,\n            msgPayloadFilter: FOCUS_HOOK_FILTER\n        });\n    }\n\n    /**\n     * Attach a listener function to be called when the user has left/blurred your app.\n     *\n     * #### Required Lifecycle Hooks ([More Info](/api/client-apps/advanced.html#lifecycle_events))\n     * * `blur`\n     * \n     * ```ts\n     * let onBlur = evt => {\n     *   // Perform blur work\n     * };\n     * myClientApp.lifecycle.addBlurListener(onBlur);\n     *\n     * // Don't forget to remove this listener inside the stop event listener\n     * myClientApp.lifecycle.addStopListener(() => {\n     *   myClientApp.lifecycle.removeBlurListener(onBlur);\n     * });\n     * ```\n     *\n     * @param listener - The function to call when the user has left your\n     * app in the UI.\n     * @param once - If the listener should only be invoked once or repeatedly; false by default.\n     *\n     * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events)\n     *\n     * @since 1.0.0\n     */\n    addBlurListener(listener: (event: SDKMessagePayload) => void, once = false) {\n        this.addMsgListener(LIFECYCLE_HOOK_EVENT_NAME, listener, {\n            once,\n            msgPayloadFilter: BLUR_HOOK_FILTER\n        });\n    }\n\n    /**\n     * Remove a previously registered blur lifecycle event listener\n     *\n     * #### Required Lifecycle Hooks ([More Info](/api/client-apps/advanced.html#lifecycle_events))\n     * * `blur`\n     * \n     * ```ts\n     * let onBlur = evt => {\n     *   // Perform blur work\n     * };\n     * myClientApp.lifecycle.addBlurListener(onBlur);\n     *\n     * // Don't forget to remove this listener inside the stop event listener\n     * myClientApp.lifecycle.addStopListener(() => {\n     *   myClientApp.lifecycle.removeBlurListener(onBlur);\n     * });\n     * ```\n     *\n     * @param listener - The previously registered blur event listener.\n     * @param once - true if once was explicitly set as true when adding the listener;\n     *  otherwise, you can explicitly provide false or rely on the default.\n     *\n     * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events)\n     *\n     * @since 1.0.0\n     */\n    removeBlurListener(listener: (event: SDKMessagePayload) => void, once = false) {\n        this.removeMsgListener(LIFECYCLE_HOOK_EVENT_NAME, listener, {\n            once,\n            msgPayloadFilter: BLUR_HOOK_FILTER\n        });\n    }\n\n    /**\n     * Attach a listener function to be called when Genesys Cloud is about to shut down your app.\n     * For instance, this can happen if the user has loaded too many apps and your app needs to be\n     * stopped to conserve resources.\n     *\n     * This provides a hook for you to do any app cleanup work.  Implementers should call\n     * stopped() after shutdown work is complete.  Genesys Cloud will eventually timeout and permanenty\n     * remove the app anyway if stopped() is not called in a timely manor.\n     *\n     * #### Required Lifecycle Hooks ([More Info](/api/client-apps/advanced.html#lifecycle_events))\n     * * `stop`\n     * \n     * ```ts\n     * myClientApp.lifecycle.addStopListener(() => {\n     *   // Perform shutdown work\n     *\n     *   // Simulate 500ms delay\n     *   window.setTimeout(() => {\n     *     myClientApp.lifecycle.stopped();\n     *   }, 500);\n     * });\n     * ```\n     *\n     * @param listener - The function to call when Genesys Cloud is about to stop this app.\n     * This function will be passed the lifecycle event and does not augment the this context.\n     * @param once - If the listener should only be invoked once or repeatedly; true by default.\n     *\n     * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events)\n     *\n     * @since 1.0.0\n     */\n    addStopListener(listener: (event: SDKMessagePayload) => void, once = true) {\n        this.addMsgListener(LIFECYCLE_HOOK_EVENT_NAME, listener, {\n            once,\n            msgPayloadFilter: STOP_HOOK_FILTER\n        });\n    }\n\n    /**\n     * Signals Genesys Cloud that this app has finished its tear down work and the iframe\n     * can be removed from Genesys Cloud permanently.\n     *\n     * #### Required Lifecycle Hooks ([More Info](/api/client-apps/advanced.html#lifecycle_events))\n     * * `stop`\n     *\n     * ```ts\n     * myClientApp.lifecycle.stopped();\n     * ```\n     *\n     * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events)\n     *\n     * @since 1.0.0\n     */\n    stopped() {\n        super.sendMsgToPc('stopped');\n    }\n\n    /**\n     * Remove a previously registered stop lifecycle event listener.\n     *\n     * #### Required Lifecycle Hooks ([More Info](/api/client-apps/advanced.html#lifecycle_events))\n     * * `stop`\n     * \n     * ```ts\n     * let onStop = evt => {\n     *   // Perform cleanup work\n     *\n     *   // Don't forget to notify Genesys Cloud on complete\n     *   myClientApp.lifecycle.stopped();\n     *\n     *   // Remove the stop listener (since you passed false for the once option)\n     *   // Note: You must also pass false for once to match the listener\n     *   myClientApp.lifecycle.removeStopListener(onStop, false);\n     * };\n     * // Note: once must be set to false or the listener will be auto-removed by default\n     * myClientApp.lifecycle.addStopListener(onStop, false);\n     * ```\n     *\n     * @param listener - The previously registered stop event listener.\n     * @param once - false if once was explicitly set as false when adding the listener;\n     *  otherwise, you can explicitly provide true or rely on the default.\n     *\n     * @see [Advanced Application Concepts - Lifecycle Events](/api/client-apps/advanced.html#lifecycle_events)\n     *\n     * @since 1.0.0\n     */\n    removeStopListener(listener: (event: SDKMessagePayload) => void, once = true) {\n        this.removeMsgListener(LIFECYCLE_HOOK_EVENT_NAME, listener, {\n            once,\n            msgPayloadFilter: STOP_HOOK_FILTER\n        });\n    }\n}\n\nexport default LifecycleApi;\n","/**\n * Utilities for interacting with general Genesys Cloud App UI components\n *\n * @since 1.0.0\n */\n\nimport BaseApi from './base';\n\n/**\n * Utilities for interacting with general Genesys Cloud App UI components\n *\n * @noInheritDoc\n * @since 1.0.0\n */\nclass CoreUiApi extends BaseApi {\n    /**\n     * Show the help UI.  Noop if already shown.\n     *\n     * ```ts\n     * myClientApp.coreUi.showHelp();\n     * ```\n     *\n     * @since 1.0.0\n     */\n    showHelp() {\n        super.sendMsgToPc('showHelp');\n    }\n\n    /**\n     * Open the help panel to the specified Resource Center artifact\n     *\n     * ```ts\n     * // Direct path\n     * myClientApp.coreUi.showResourceCenterArtifact('articles/complete-profile');\n     * ```\n     *\n     * ```ts\n     * // Permalink\n     * myClientApp.coreUi.showResourceCenterArtifact('?p=7711');\n     * ```\n     * \n     * @param artifactRelPath - The path of the Resource Center artifact\n     * relative to the Resource Center root.  Supports paths and query string params,\n     * but not hash params.  The appropriate theme will be inserted automatically.\n     *\n     * @since 1.0.0\n     */\n    showResourceCenterArtifact(artifactRelPath: string) {\n        super.sendMsgToPc('showResourceCenterArtifact', {resourceCenterRelPath: artifactRelPath});\n    }\n\n    /**\n     * Hide the help UI.  Noop if already hidden.\n     *\n     * ```ts\n     * myClientApp.coreUi.hideHelp();\n     * ```\n     *\n     * @since 1.0.0\n     */\n    hideHelp() {\n        super.sendMsgToPc('hideHelp');\n    }\n\n    /**\n     * Open a URL in a new window.\n     *\n     * ```ts\n     * myClientApp.coreUi.openWindow(\"https://en.wikipedia.org/wiki/Main_Page\");\n     * ```\n     *\n     * @param targetUrl - The URL to open in a new window\n     *\n     * @since 2.3.0\n     */\n    openWindow(targetUrl: string) {\n        super.sendMsgToPc('openWindow', {targetUrl});\n    }\n}\n\nexport default CoreUiApi;\n","/**\n * Utilities for interacting with users in the Genesys Cloud Client\n *\n * @since 1.0.0\n *\n * @deprecated Use {@link module:directory} instead. (Since 2.3.0)\n */\n\nimport BaseApi from './base';\n\n/**\n * Utilities for interacting with users in the Genesys Cloud Client\n *\n * @noInheritDoc\n * @since 1.0.0\n *\n * @deprecated Use {@link DirectoryApi} instead. (Since 2.3.0)\n */\nclass UsersApi extends BaseApi {\n    /**\n     * Shows the profile of a specified user\n     *\n     * ```ts\n     * myClientApp.users.showProfile(\"targetUserId\");\n     * ```\n     *\n     * @param userId - The id of the user to show\n     *\n     * @since 1.0.0\n     *\n     * @deprecated Use {@link ClientApp#directory#showUser} instead. (Since 2.3.0)\n     *\n     * @see [DirectoryApi#showUser](directoryapi.md#showuser) for a replacement.\n     */\n    showProfile(userId: string) {\n        super.sendMsgToPc('showProfile', {'profileId': userId});\n    }\n}\n\nexport default UsersApi;\n","/**\n * Utilities for interacting with the company directory in the Genesys Cloud Client\n *\n * @since 2.3.0\n */\n\nimport BaseApi from './base';\n\n/**\n * Utilities for interacting with the company directory in the Genesys Cloud Client\n *\n * @noInheritDoc\n * @since 2.3.0\n */\nclass DirectoryApi extends BaseApi {\n    /**\n     * Shows the profile of a specified user\n     *\n     * ```ts\n     * myClientApp.directory.showUser(\"targetUserId\");\n     * ```\n     *\n     * @param userId - The id of the user to show\n     *\n     * @since 2.3.0\n     */\n    showUser(userId: string) {\n        super.sendMsgToPc('showProfile', { profileId: userId });\n    }\n\n    /**\n     * Shows the specified group\n     *\n     * ```ts\n     * myClientApp.directory.showGroup(\"targetGroupId\");\n     * ```\n     *\n     * @param groupId - The id of the group to show\n     *\n     * @since 2.3.0\n     */\n    showGroup(groupId: string) {\n        super.sendMsgToPc('showGroup', { groupId: groupId });\n    }\n}\n\nexport default DirectoryApi;\n","/**\n * Utilities for interacting with Genesys Cloud conversations\n *\n * @since 1.1.0\n */\n\nimport BaseApi from './base';\n\n/**\n * Utilities for interacting with Genesys Cloud conversations\n *\n * @noInheritDoc\n * @since 1.1.0\n */\nclass ConversationsApi extends BaseApi {\n    /**\n     * Show an interaction by ID.\n     *\n     * Required Permissions:\n     * * ALL Of\n     *     * analytics:conversationDetail:view\n     *     * analytics:conversationAggregate:view\n     *     * ANY Of\n     *         * conversation:communication:view\n     *         * quality:evaluation:add\n     *         * quality:calibration:view\n     *         * quality:evaluation:editScore\n     *\n     * ```ts\n     * myClientApp.conversations.showInteractionDetails('af2ef59d-9bc5-4436-8738-97c04869c81c');\n     * ```\n     *\n     * @since 1.1.0\n     */\n    showInteractionDetails(conversationId: string) {\n        super.sendMsgToPc('showInteractionDetails', {conversationId: conversationId});\n    }\n\n    /**\n     * Send a message to be filled into the interaction message box for the agent to review and send.\n     * This function works specifically with a bound interaction when both the interaction and calling app\n     * are visible, it is not intended (and will not work) for situations where the interaction is not active.\n     * Furthermore, this function should only be called in response to user interaction to ensure the agent is\n     * aware of the impending text insertion and so their existing draft state is not unexpectedly altered.\n     * \n     * @param mode - The insertion mode to use when injecting the text into the agent's text box.\n     * 'insert' -> injects text at agent's cursor position, leaving other text intact.\n     * \n     * @param message - The message to inject into the agent's text box.\n     */\n    proposeInteractionMessage(mode: 'insert', message: string) {\n        super.sendMsgToPc('proposeInteractionMessage', { mode, message });\n    }\n}\n\nexport default ConversationsApi;\n","/**\n * Utilities for showing agent level interaction and evaluation details\n *\n * @since 1.3.0\n */\nimport BaseApi from './base';\n\n/**\n * Utilities for showing agent level interaction and evaluation details\n *\n * @noInheritDoc\n * @since 1.3.0\n */\nclass MyConversationsApi extends BaseApi {\n    /**\n     * Show an agent his/her interaction by ID.\n     *\n     * Required Permissions:\n     * * ALL Of\n     *     * User must be an Agent participant on the conversation\n     *     * ONE Of\n     *         * Implicit Conversation Access via participant on the Conversation\n     *         * conversation:communication:view\n     *\n     * ```ts\n     * myClientApp.myConversations.showInteractionDetails(\n     *   'B1B0B92B-B944-4F5D-AF62-8E5BAFFC9298',\n     * );\n     * ```\n     * \n     * @param conversationId The id of the conversation\n     * \n     * @since 1.3.0\n     */\n\n    showInteractionDetails(conversationId: string) {\n        super.sendMsgToPc('showMyInteractionDetails', {\n            'conversationId': conversationId\n        });\n    }\n\n    /**\n     * Show an agent his/her evaluation details by conversation and evaluation IDs.\n     *\n     * Required Permissions:\n     * * ALL Of\n     *     * User must be the Agent evaluated on the specified conversation/evaluation\n     *     * quality:evaluation:view\n     * \n     * ```ts\n     * myClientApp.myConversations.showEvaluationDetails(\n     *   'B1B0B92B-B944-4F5D-AF62-8E5BAFFC9298',\n     *   '0E3759CE-2275-4480-BB15-3D4717446F93',\n     * );\n     * ```\n     *\n     * @param conversationId The id of the conversation\n     * @param evaluationId The id of the evaluation\n     *\n     * @since 1.3.0\n     */\n    showEvaluationDetails(conversationId: string, evaluationId: string) {\n        super.sendMsgToPc('showMyEvaluationDetails', {\n            'conversationId': conversationId,\n            'evaluationId': evaluationId\n        });\n    }\n}\n\nexport default MyConversationsApi;\n","/**\n * Utilities for interacting with External Contacts\n *\n * @since 1.4.0\n */\n\nimport BaseApi from './base';\n\n/**\n * Utilities for interacting with External Contacts\n *\n * @noInheritDoc\n * @since 1.4.0\n */\nclass ExternalContactsApi extends BaseApi {\n    /**\n     * Show an external contact by ID.\n     *\n     * Required Permissions:\n     * * ANY Of\n     *     * externalContacts:contact:view\n     *\n     * ```ts\n     * myClientApp.externalContacts.showExternalContactProfile('b33491ce-0a84-4959-9273-848901d6db11');\n     * ```\n     *\n     * @since 1.4.0\n     */\n    showExternalContactProfile(externalContactId: string) {\n        super.sendMsgToPc('showExternalContactProfile', {contactId: externalContactId});\n    }\n    /**\n     * Show an external organization by ID.\n     *\n     * Required Permissions:\n     * * ANY Of\n     *     * externalContacts:externalOrganization:view\n     *\n     * ```ts\n     * myClientApp.externalContacts.showExternalOrganizationProfile('8a0db7c8-c4a3-4577-b41e-aa40a6408f1c');\n     * ```\n     *\n     * @since 1.4.0\n     */\n    showExternalOrganizationProfile(externalOrganizationId: string) {\n        super.sendMsgToPc('showExternalOrganizationProfile', {externalOrganizationId: externalOrganizationId});\n    }\n}\n\nexport default ExternalContactsApi;\n","/**\n * SDK to work with Genesys Cloud Client Apps\n *\n * {@link https://developer.mypurecloud.com/api/client-apps/index.html}\n *\n * @author Genesys Telecommunications Laboratories, Inc.\n * @copyright Copyright (C) 2018 Genesys Telecommunications Laboratories, Inc.\n * @license MIT\n * @since 1.0.0\n */\n\nimport type { Environment } from 'genesys-cloud-service-discovery-web';\nimport * as queryString from 'query-string';\nimport { lookupPcEnv, lookupGcEnv, PcEnv, DEFAULT_PC_ENV } from './utils/env';\nimport AlertingApi from './modules/alerting';\nimport LifecycleApi from './modules/lifecycle';\nimport CoreUiApi from './modules/ui';\nimport UsersApi from './modules/users';\nimport DirectoryApi from './modules/directory';\nimport ConversationsApi from './modules/conversations';\nimport MyConversationsApi from './modules/myConversations';\nimport ExternalContactsApi from './modules/externalContacts';\n\n/**\n * Provides bi-directional communication and integration between this instance of a Genesys Cloud Client Application\n * and the Genesys Cloud host application\n */\nclass ClientApp {\n    /**\n     * The private reference to the known PC environment which is set, inferred, or defaulted by the config provided to the instance.\n     */\n    private _pcEnv: PcEnv | null = null;\n\n    /**\n     * The private reference to the custom origin, if provided.\n     */\n    private _customPcOrigin: string | null = null;\n\n    /**\n     * The AlertingApi instance.\n     *\n     * ```ts\n     * let clientApp = new ClientApp({\n     *   gcHostOriginQueryParam: 'gcHostOrigin',\n     *   gcTargetEnvQueryParam: 'gcTargetEnv'\n     * });\n     *\n     * clientApp.alerting.someMethod(...);\n     * ```\n     */\n    alerting: AlertingApi;\n\n    /**\n     * The LifecycleApi instance.\n     *\n     * ```ts\n     * let clientApp = new ClientApp({\n     *   gcHostOriginQueryParam: 'gcHostOrigin',\n     *   gcTargetEnvQueryParam: 'gcTargetEnv'\n     * });\n     *\n     * clientApp.lifecycle.someMethod(...);\n     * ```\n     */\n    lifecycle: LifecycleApi;\n\n    /**\n     * The CoreUIApi instance.\n     *\n     * ```ts\n     * let clientApp = new ClientApp({\n     *   gcHostOriginQueryParam: 'gcHostOrigin',\n     *   gcTargetEnvQueryParam: 'gcTargetEnv'\n     * });\n     *\n     * clientApp.coreUi.someMethod(...);\n     * ```\n     */\n    coreUi: CoreUiApi;\n\n    /**\n     * The UsersApi instance.\n     *\n     * ```ts\n     * let clientApp = new ClientApp({\n     *   gcHostOriginQueryParam: 'gcHostOrigin',\n     *   gcTargetEnvQueryParam: 'gcTargetEnv'\n     * });\n     *\n     * clientApp.users.someMethod(...);\n     * ```\n     *\n     * @deprecated Use {@link directory} property instead. (Since 2.3.0)\n     */\n    users: UsersApi;\n\n    /**\n     * The DirectoryApi instance.\n     *\n     * ```ts\n     * let clientApp = new ClientApp({\n     *   gcHostOriginQueryParam: 'gcHostOrigin',\n     *   gcTargetEnvQueryParam: 'gcTargetEnv'\n     * });\n     *\n     * clientApp.directory.someMethod(...);\n     * ```\n     * @since 2.3.0\n     */\n    directory: DirectoryApi;\n\n    /**\n     * The ConversationsApi instance.\n     *\n     * ```ts\n     * let clientApp = new ClientApp({\n     *   gcHostOriginQueryParam: 'gcHostOrigin',\n     *   gcTargetEnvQueryParam: 'gcTargetEnv'\n     * });\n     *\n     * clientApp.conversations.someMethod(...);\n     * ```\n     */\n    conversations: ConversationsApi;\n\n    /**\n     * The MyConversationsApi instance.\n     *\n     * ```ts\n     * let clientApp = new ClientApp({\n     *   gcHostOriginQueryParam: 'gcHostOrigin',\n     *   gcTargetEnvQueryParam: 'gcTargetEnv'\n     * });\n     *\n     * clientApp.myConversations.someMethod(...);\n     * ```\n     *\n     * @since 1.3.0\n     */\n    myConversations: MyConversationsApi;\n\n    /**\n     * The External Contacts instance.\n     *\n     * ```ts\n     * let clientApp = new ClientApp({\n     *   gcHostOriginQueryParam: 'gcHostOrigin',\n     *   gcTargetEnvQueryParam: 'gcTargetEnv'\n     * });\n     *\n     * clientApp.externalContacts.someMethod(...);\n     * ```\n     *\n     * @since 1.4.0\n     */\n    externalContacts: ExternalContactsApi;\n\n    /**\n     * Constructs an instance of a Genesys Cloud Client Application to communicate with Genesys Cloud\n     *\n     * ```ts\n     * let clientApp = new ClientApp({\n     *   gcHostOriginQueryParam: 'gcHostOrigin',\n     *   gcTargetEnvQueryParam: 'gcTargetEnv'\n     * });\n     * ```\n     *\n     * @param cfg - Runtime config of the client\n     */\n    constructor(cfg: {\n        /** Name of a query param to auto parse into the pcEnvironment; Must be valid and a single param. */\n        pcEnvironmentQueryParam?: string;\n        /** The PC top-level domain (e.g. mypurecloud.com, mypurecloud.au); Must be a valid PC Env tld; Preferred over pcOrigin. */\n        pcEnvironment?: string;\n        /** The full origin (protocol, host, port) of the Genesys Cloud host environment (e.g. https://apps.mypurecloud.com).  Prefer using pcEnvironment[QueryParam] over this property. */\n        pcOrigin?: string;\n        /**\n         * Name of a query param to auto parse into the gcHostOrigin.\n         * Must be valid and used with gcTargetEnvQueryParam.\n         * Best Practice.\n         */\n        gcHostOriginQueryParam?: string;\n        /**\n         * Name of a query param to auto parse into the gcTargetEnv.\n         * Must be valid and used with gcHostOriginQueryParam.\n         * Best Practice.\n         */\n        gcTargetEnvQueryParam?: string;\n        /**\n         * The GC host origin (e.g. https://apps.mypurecloud.com, https://apps.mypurecloud.au).\n         * Must be a valid origin and used with gcTargetEnv.\n         */\n        gcHostOrigin?: string;\n        /**\n         * The GC env target (e.g. prod, prod-euw2).\n         * Must be a valid environment name and used with gcHostOrigin.\n         */\n        gcTargetEnv?: string;\n    } = {}) {\n        if (cfg) {\n            const parsedQueryString = queryString.parse(ClientApp._getQueryString() || '');\n            if ('gcHostOriginQueryParam' in cfg || 'gcTargetEnvQueryParam' in cfg) {\n                this.assertNonEmptyString(cfg.gcHostOriginQueryParam, 'host origin query param name');\n                this.assertNonEmptyString(cfg.gcTargetEnvQueryParam, 'target env query param name');\n                const parsedGcHostOrigin = parsedQueryString[cfg.gcHostOriginQueryParam];\n                const parsedGcTargetEnv = parsedQueryString[cfg.gcTargetEnvQueryParam];\n                this.assertNonEmptyString(parsedGcHostOrigin, 'host origin parsed query param');\n                this.assertNonEmptyString(parsedGcTargetEnv, 'target env parsed query param');\n                this._pcEnv = this.lookupGcEnv(parsedGcHostOrigin, parsedGcTargetEnv);\n            } else if ('gcHostOrigin' in cfg || 'gcTargetEnv' in cfg) {\n                this.assertNonEmptyString(cfg.gcHostOrigin, 'gcHostOrigin');\n                this.assertNonEmptyString(cfg.gcTargetEnv, 'gcTargetEnv');\n                this._pcEnv = this.lookupGcEnv(cfg.gcHostOrigin, cfg.gcTargetEnv);\n            } else if ('pcEnvironmentQueryParam' in cfg) {\n                const paramName = cfg.pcEnvironmentQueryParam;\n                this.assertNonEmptyString(paramName, 'query param name');\n                const paramValue = parsedQueryString[paramName];\n                this.assertNonEmptyString(paramValue, `value for query param '${paramName}'`);\n                this._pcEnv = this.lookupEnv(paramValue);\n            } else if ('pcEnvironment' in cfg) {\n                this.assertNonEmptyString(cfg.pcEnvironment, 'pcEnvironment');\n                this._pcEnv = this.lookupEnv(cfg.pcEnvironment);\n            } else if ('pcOrigin' in cfg) {\n                this.assertNonEmptyString(cfg.pcOrigin, 'pcOrigin');\n                this._customPcOrigin = cfg.pcOrigin;\n            }\n        }\n\n        if (!this._pcEnv && !this._customPcOrigin) {\n            // Use the default PC environment\n            this._pcEnv = DEFAULT_PC_ENV;\n        }\n\n        const apiCfg = {\n            targetPcOrigin: (this._pcEnv ? this._pcEnv.pcAppOrigin : this._customPcOrigin)\n        };\n\n        this.alerting = new AlertingApi(apiCfg);\n        this.lifecycle = new LifecycleApi(apiCfg);\n        this.coreUi = new CoreUiApi(apiCfg);\n        this.users = new UsersApi(apiCfg);\n        this.directory = new DirectoryApi(apiCfg);\n        this.conversations = new ConversationsApi(apiCfg);\n        this.myConversations = new MyConversationsApi(apiCfg);\n        this.externalContacts = new ExternalContactsApi(apiCfg);\n    }\n\n    private assertNonEmptyString(value: unknown, name: string): asserts value is string {\n        if (typeof value !== 'string' || value.trim().length === 0) {\n            throw new Error(`Invalid ${name} provided.  Must be a non-null, non-empty string`);\n        }\n    }\n\n    protected lookupEnv(env: string, envTlds?: string[], hostAppDevOrigin?: string) {\n        const pcEnv = lookupPcEnv(env, true, envTlds, hostAppDevOrigin);\n        if (!pcEnv) throw new Error(`Could not parse '${env}' into a known PureCloud environment`);\n        return pcEnv;\n    }\n    protected lookupGcEnv(hostOrigin: string, targetEnv: string, envs?: Environment[]) {\n        const pcEnv = lookupGcEnv(hostOrigin, targetEnv, envs);\n        if (!pcEnv) throw new Error(`Could not parse ${hostOrigin} (${targetEnv}) into a known GenesysCloud environment`);\n        return pcEnv;\n    }\n\n    /**\n     * Returns the pcEnvironment (e.g. mypurecloud.com, mypurecloud.jp) if known; null otherwise.\n     * This value will be available if a valid Genesys Cloud Environment is provided, inferred, or\n     * defaulted from the config passed to this instance.\n     *\n     * @returns the valid Genesys Cloud environment; null if unknown.\n     *\n     * @since 1.0.0\n     */\n    get pcEnvironment() {\n        return this.gcEnvironment;\n    }\n    /**\n     * Returns the gcEnvironment (e.g. mypurecloud.com, mypurecloud.jp) if known; null otherwise.\n     * This value will be available if a valid Genesys Cloud Environment is provided, inferred, or\n     * defaulted from the config passed to this instance.\n     *\n     * @returns the valid Genesys Cloud environment; null if unknown.\n     *\n     * @since 2.6.3\n     */\n    get gcEnvironment() {\n        return (this._pcEnv ? this._pcEnv.pcEnvTld : null);\n    }\n\n    /**\n     * Displays the version of the PureClound Client App SDK.\n     *\n     * ```ts\n     * ClientApp.version\n     * ```\n     *\n     * @returns The version of the Genesys Cloud Client App SDK\n     *\n     * @since 1.0.0\n     */\n    static get version() {\n        return __PACKAGE_VERSION__;\n    }\n\n    /**\n     * Displays information about this version of the PureClound Client App SDK.\n     *\n     * ```ts\n     * ClientApp.about(); // SDK details returned as a string\n     * ```\n     *\n     * @returns A string of information describing this library\n     *\n     * @since 1.0.0\n     */\n    static about() {\n        return `${__PACKAGE_NAME__}v${__PACKAGE_VERSION__}`;\n    }\n\n    /**\n     * A private utility method\n     *\n     * @ignore\n     */\n    static _getQueryString() {\n        return ((window && window.location) ? window.location.search : null);\n    }\n}\n\nexport default ClientApp;\n"],"names":["instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","left","slice","right","Array","concat","call","decode","input","tokens","match","encodedURI","replace","replaceMap","%FE%FF","%FF%FE","exec","result","entries","keys","customDecodeURIComponent","string","separator","separatorIndex","indexOf","predicate","ret","isArr","isArray","val","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","encodeURIComponent","x","charCodeAt","toString","toUpperCase","decodeComponent","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","Number","isNaN","trim","parseBooleans","toLowerCase","parse","query","assign","sort","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","map","item","test","arrayValue","parserForArrayFormat","create","param","splitOnFirst","k","reduce","Boolean","keysSorter","a","b","exports","object","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","filter","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","[object Object]","queryFromUrl","parsedQueryFromUrl","queryString","stringify","getHash","parseUrl","stringifyUrl","filterObject","exclusionFilter","pick","arr","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","len","arr2","o","minLen","arrayLikeToArray","n","constructor","name","from","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","iter","arrayWithoutHoles","iterableToArray","nonIterableSpread","port","protocol","has","hasOwnProperty","e","prefix","pairs","part","parser","controlOrWhitespace","CRHTLF","slashes","protocolre","windowsDriveLetter","trimLeft","str","rules","address","isSpecial","NaN","ignore","lolcation","loc","location","window","global","self","finaldestination","type","Url","unescape","pathname","href","scheme","extractProtocol","rest","forwardSlashes","otherSlashes","slashesCount","this","relative","extracted","instruction","instructions","qs","lastIndexOf","charAt","base","path","last","unshift","up","splice","resolve","required","host","hostname","username","password","auth","origin","set","fn","pop","char","ins","_interopDefaultLegacy","default","parseUrl__default","__assign","t","s","arguments","p","apply","__spreadArray","to","pack","ar","l","assert","msg","Error","parseValidUrl","assertValidEnvFilters","filters","env","every","ENVS","status","STATUSES","environments","region","publicDomainName","publicDomainAliases","DEFAULT_LOCAL_HOSTNAMES","STABLE_PUBLIC_ENVS_FILTERS","NO_FILTERS","matchesHostname","domain","s1","s2","getEnvironments","data","find","_a","d","some","parseDeployedRuntime","parsedEnv","local","currentDomainName","parseRuntimeFromLocalPath","localHostnames","valueName","value_1","assertValidStringArray","envName_1","localEnv","buildPcEnv","tld","pcEnvTld","pcAppOrigin","PC_ENV_TLDS","tlds","defaultEnv","DEFAULT_PC_ENV","isKnownEnvName","toCheck","envs","Set","findPcEnvironment","targetEnv","endsWith","_extends","module","source","_typeof","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","property","_get","receiver","Reflect","get","superPropBase","desc","getOwnPropertyDescriptor","_setPrototypeOf","subClass","superClass","ReferenceError","assertThisInitialized","postMsgToPc","tgtOrigin","transfer","myWindow","myParent","parent","myConsole","console","validRuntime","validEnv","validApi","postMessage","errMsg","error","BaseApi","cfg","event","_this","_onMsg","commsUtils","_targetPcOrigin","targetPcOrigin","_protocolDetails","agentName","protocolAgentName","agentVersion","protocolAgentVersion","actionName","msgPayload","_commsUtils","buildSdkMsgPayload","JSON","action","eventType","listener","proposedListenerCfg","_buildNormalizedListenerOptions","duplicateListener","listenerCfgs","_msgListenerCfgs","forEach","currListenerCfg","_this2","_isDuplicateListenerCfg","_getListenerCount","_subscribeToMsgs","listenerCfgToRemove","eventTypeListenerCfgs","listenerCfgIndex","_unsubscribeFromMsgs","currEventType","currListenerCfgs","_this3","_myWindow","addEventListener","_msgHandler","removeEventListener","_myParent","purecloudEventType","listenerCfgsToRemove","msgPayloadFilter","userSpaceEventData","once","_this4","removeMsgListener","listenerCfg1","listenerCfg2","VALID_MESSAGE_TYPES","VALID_SUPPLEMENTAL_OPTIONS","defaultToastOptions","timeout","showCloseButton","markdownMessage","AlertingApi","title","message","newObj","toastOptions","messageParams","requestedType","validOptions","count","buildHookFilter","hookName","hook","BOOTSTRAP_HOOK_FILTER","FOCUS_HOOK_FILTER","BLUR_HOOK_FILTER","STOP_HOOK_FILTER","LifecycleApi","addMsgListener","CoreUiApi","artifactRelPath","resourceCenterRelPath","targetUrl","UsersApi","userId","DirectoryApi","profileId","groupId","ConversationsApi","conversationId","mode","MyConversationsApi","evaluationId","ExternalContactsApi","externalContactId","contactId","externalOrganizationId","parsedQueryString","ClientApp","_getQueryString","assertNonEmptyString","gcHostOriginQueryParam","gcTargetEnvQueryParam","parsedGcHostOrigin","parsedGcTargetEnv","_pcEnv","lookupGcEnv","gcHostOrigin","gcTargetEnv","paramName","pcEnvironmentQueryParam","paramValue","lookupEnv","pcEnvironment","pcOrigin","_customPcOrigin","apiCfg","alerting","lifecycle","coreUi","users","directory","conversations","myConversations","externalContacts","envTlds","hostAppDevOrigin","pcEnv","lenient","toSearch","substring","lookupPcEnv","hostOrigin","hostLocation","URL","gcEnvironment","search"],"mappings":"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"}